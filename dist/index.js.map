{"version":3,"sources":["webpack://@frontify/app-bridge/webpack/universalModuleDefinition","webpack://@frontify/app-bridge/webpack/bootstrap","webpack://@frontify/app-bridge/webpack/runtime/define property getters","webpack://@frontify/app-bridge/webpack/runtime/hasOwnProperty shorthand","webpack://@frontify/app-bridge/webpack/runtime/make namespace object","webpack://@frontify/app-bridge/webpack/startup","webpack://@frontify/app-bridge/./src/utilities/notify.ts","webpack://@frontify/app-bridge/./src/errors/NotifyError.ts","webpack://@frontify/app-bridge/./src/types/Topic.ts","webpack://@frontify/app-bridge/./src/errors/TimeoutReachedError.ts","webpack://@frontify/app-bridge/./src/utilities/subscribe.ts","webpack://@frontify/app-bridge/./src/AppBridgeIframe.ts","webpack://@frontify/app-bridge/./src/types/TerrificEvent.ts","webpack://@frontify/app-bridge/./src/utilities/hash.ts","webpack://@frontify/app-bridge/./src/utilities/jquery.ts","webpack://@frontify/app-bridge/./src/AppBridgeNative.ts","webpack://@frontify/app-bridge/./src/index.ts"],"names":["root","factory","exports","module","define","amd","a","i","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","__webpack_exports__","notify","topic","token","data","options","window","top","postMessage","origin","FetchError","Error","Topic","TimeoutReachedError","subscribe","Promise","resolve","reject","addEventListener","subscribeResponseCallback","event","response","success","removeEventListener","setTimeout","timeout","TerrificEvent","PUBSUB_TOKEN","length","Math","random","toString","substr","generateRandomString","appState","getAppState","GetAppState","putAppState","newState","PutAppState","deleteAppState","DeleteAppState","assets","getAssetById","assetId","GetAssetById","postExternalAssets","assetsWithPreview","filter","asset","previewUrl","PostExternalAssets","auth","getThirdPartyOauth2Tokens","GetThirdPartyOauth2Tokens","getRefreshedThirdpartyOauth2Tokens","refreshToken","GetRefreshedThirdpartyOauth2Token","utilities","closeApp","CloseApp","openAssetChooser","OpenAssetChooser","getJqueryDataByElement","element","keys","reduce","stack","block","getBlockId","$parent","closest","parentDivBlockId","parseInt","getAttribute","getBlockSettings","blockId","this","blockSettings","styleguideSettings","JSON","parse","updateBlockSettings","newSettings","pageId","className","document","getElementsByClassName","getJqueryDatasetByClassName","id","sectionId","translationLanguage","body","stringify","console","log","fetch","method","headers","getElementsByName","content","settings","language","json","context","getEditorState","classList","contains","getProjectId","application","config","project","$assetChooser","sandbox","tpl","render","connectors","events","OpenModal","modifier","$content","version","createNativeAppBridge","createIframeAppBridge","__webpack_modules__"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[716](0, __webpack_exports__, __webpack_require__);\n","export type NotifyOptions = {\n    origin?: string;\n};\n\nexport type NotifyData<T = Record<string, unknown>> = T;\n\nexport default function notify<T>(topic: string, token: string, data?: NotifyData<T>, options?: NotifyOptions): void {\n    const parentWindow = window.top;\n    parentWindow.postMessage(\n        {\n            topic,\n            token,\n            data,\n        },\n        options?.origin || \"*\",\n    );\n}\n","export default class FetchError extends Error {\n    constructor(topic: string) {\n        super(`Call with topic ${topic} failed.`);\n    }\n}\n","export enum Topic {\n    CloseApp = \"closeApp\",\n    DeleteAppState = \"deleteAppState\",\n    GetAppState = \"getAppState\",\n    GetAssetById = \"getAssetById\",\n    GetProjectId = \"getProjectId\",\n    GetRefreshedThirdpartyOauth2Token = \"getRefreshedThirdpartyOauth2Token\",\n    GetThirdPartyOauth2Tokens = \"getThirdPartyOauth2Tokens\",\n    OpenAssetChooser = \"openAssetChooser\",\n    PostExternalAssets = \"postExternalAssets\",\n    PutAppState = \"putAppState\",\n}\n","export default class TimeoutReachedError extends Error {\n    constructor(topic: string) {\n        super(`Timeout for call with topic \"${topic}\" expired. Call was aborted.`);\n    }\n}\n","import FetchError from \"../errors/NotifyError\";\nimport TimeoutReachedError from \"../errors/TimeoutReachedError\";\nimport { Topic } from \"../types\";\nimport type CrossDocumentMessageResponse from \"../types/CrossDocumentMessageResponse\";\n\nexport type SubscribeOptions = {\n    timeout?: number;\n};\n\nexport const SUBSCRIBE_TIMEOUT = 3 * 1000;\n\nexport default function subscribe<T>(topic: Topic, token: string, options?: SubscribeOptions): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n        const subscribeResponseCallback = (event: MessageEvent) => {\n            const response: CrossDocumentMessageResponse<T> = event.data;\n\n            if (response.token === token && response.topic === topic && response.success) {\n                resolve(<T>(response.data || true));\n            } else {\n                reject(new FetchError(topic));\n            }\n\n            window.removeEventListener(\"message\", subscribeResponseCallback);\n        };\n\n        window.addEventListener(\"message\", subscribeResponseCallback);\n\n        setTimeout(() => {\n            reject(new TimeoutReachedError(topic));\n        }, options?.timeout || SUBSCRIBE_TIMEOUT);\n    });\n}\n","import { generateRandomString } from \"./utilities/hash\";\nimport notify, { NotifyData } from \"./utilities/notify\";\nimport subscribe from \"./utilities/subscribe\";\nimport type { AppBridgeAppState, AppBridgeAssets, AppBridgeAuth, AppBridgeUtilities } from \"./types/AppBridge\";\nimport type { PostExternalAssetParams, OauthTokens, Asset, AppBridgeIframe } from \"./types\";\nimport { Topic } from \"./types\";\n\nconst PUBSUB_TOKEN = generateRandomString();\nconst DEFAULT_TIMEOUT = 3 * 1000;\nconst OAUTH2_TIMEOUT = 5 * 60 * 1000;\nconst FILE_UPLOAD_TIMEOUT = 30 * 1000;\n\nconst appState: AppBridgeAppState = {\n    getAppState<T = Record<string, unknown>>(): Promise<T> {\n        notify(Topic.GetAppState, PUBSUB_TOKEN);\n        return subscribe<T>(Topic.GetAppState, PUBSUB_TOKEN);\n    },\n\n    async putAppState(newState: NotifyData): Promise<boolean> {\n        notify(Topic.PutAppState, PUBSUB_TOKEN, newState);\n        return subscribe<boolean>(Topic.PutAppState, PUBSUB_TOKEN);\n    },\n\n    async deleteAppState(): Promise<boolean> {\n        notify(Topic.DeleteAppState, PUBSUB_TOKEN);\n        return subscribe<boolean>(Topic.DeleteAppState, PUBSUB_TOKEN);\n    },\n};\n\nconst assets: AppBridgeAssets = {\n    getAssetById(assetId: number): Promise<Asset> {\n        notify(Topic.GetAssetById, PUBSUB_TOKEN, { assetId });\n        return subscribe<Asset>(Topic.GetAssetById, PUBSUB_TOKEN);\n    },\n\n    async postExternalAssets(assets: PostExternalAssetParams[]): Promise<Asset[]> {\n        const assetsWithPreview = assets.filter((asset) => asset.previewUrl);\n        const timeout = assetsWithPreview.length ? FILE_UPLOAD_TIMEOUT : DEFAULT_TIMEOUT;\n\n        notify<PostExternalAssetParams[]>(Topic.PostExternalAssets, PUBSUB_TOKEN, assets);\n        return subscribe<Asset[]>(Topic.PostExternalAssets, PUBSUB_TOKEN, {\n            timeout,\n        });\n    },\n};\n\nconst auth: AppBridgeAuth = {\n    getThirdPartyOauth2Tokens(): Promise<OauthTokens> {\n        notify(Topic.GetThirdPartyOauth2Tokens, PUBSUB_TOKEN);\n        return subscribe<OauthTokens>(Topic.GetThirdPartyOauth2Tokens, PUBSUB_TOKEN, {\n            timeout: OAUTH2_TIMEOUT,\n        });\n    },\n\n    getRefreshedThirdpartyOauth2Tokens(refreshToken: string): Promise<OauthTokens> {\n        notify(Topic.GetRefreshedThirdpartyOauth2Token, PUBSUB_TOKEN, { refreshToken });\n        return subscribe<OauthTokens>(Topic.GetRefreshedThirdpartyOauth2Token, PUBSUB_TOKEN);\n    },\n};\n\nconst utilities: AppBridgeUtilities = {\n    closeApp(): void {\n        notify(Topic.CloseApp, PUBSUB_TOKEN);\n    },\n\n    openAssetChooser: (): void => {\n        notify(Topic.OpenAssetChooser, PUBSUB_TOKEN);\n    },\n};\n\nexport default <AppBridgeIframe>{\n    appState,\n    assets,\n    auth,\n    utilities,\n};\n","export enum TerrificEvent {\n    OpenModal = \"onOpenModal\",\n}\n","export const generateRandomString = (length = 6): string => {\n    return Math.random().toString(20).substr(2, length);\n};\n","export const getJqueryDataByElement = (element: Element): Record<string, unknown> => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    //@ts-ignore\n    return Object.keys(element).reduce((stack, key) => ({ ...stack, ...element[key] }), {});\n};\n\nexport const getJqueryDatasetByClassName = (className: string): Record<string, unknown> => {\n    const element = document.getElementsByClassName(className)[0];\n    if (!element) {\n        throw new Error(\"Could not find the DOM node via class name\");\n    }\n\n    return getJqueryDataByElement(element);\n};\n","import type { Asset, PostExternalAssetParams, AppBridgeNative } from \"./types\";\nimport type { AppBridgeAssets, AppBridgeBlock, AppBridgeContext, AppBridgeUtilities } from \"./types/AppBridge\";\nimport { TerrificEvent } from \"./types/TerrificEvent\";\nimport { getJqueryDataByElement, getJqueryDatasetByClassName } from \"./utilities/jquery\";\n\nconst assets: AppBridgeAssets = {\n    getAssetById(assetId: number): Promise<Asset> {\n        return Promise.resolve({ assetId } as unknown as Asset);\n    },\n\n    async postExternalAssets(asset: PostExternalAssetParams[]): Promise<Asset[]> {\n        return [{ asset }] as unknown as Asset[];\n    },\n};\n\nconst block: AppBridgeBlock = {\n    getBlockId(element: HTMLElement): number {\n        const $parent = element.closest(\"div[data-block]\");\n        const parentDivBlockId = parseInt($parent?.getAttribute(\"data-block\") || \"0\");\n\n        if ($parent || parentDivBlockId > 0) {\n            return parentDivBlockId;\n        }\n\n        throw new Error(\"Block's parent div not found.\");\n    },\n\n    getBlockSettings<T = Record<string, unknown>>(element: HTMLElement): T {\n        const blockId = this.getBlockId(element);\n        const blockSettings = window.styleguideSettings[blockId];\n\n        if (!blockSettings) {\n            throw new Error(`Could not find settings for block ${blockId}`);\n        }\n\n        return JSON.parse(blockSettings) as T;\n    },\n\n    updateBlockSettings(element: HTMLElement, newSettings: Record<string, unknown>): Promise<boolean> {\n        const pageId = getJqueryDatasetByClassName(\"page\").id;\n        if (!pageId) {\n            throw new Error(\"Page ID not found\");\n        }\n\n        const sectionId = getJqueryDataByElement(element).id;\n        const blockId = this.getBlockId(element);\n\n        const { translationLanguage } = getJqueryDataByElement(document.body);\n\n        if (JSON.stringify(this.getBlockSettings(element)) === JSON.stringify(newSettings)) {\n            console.log(\"You have the same settings, skipping call...\");\n            return Promise.resolve(true);\n        }\n\n        return new Promise(async (resolve) => {\n            const response = await window.fetch(`/api/document/block/${pageId}/${sectionId}/${blockId}`, {\n                method: \"POST\",\n                headers: {\n                    \"x-csrf-token\": (document.getElementsByName(\"x-csrf-token\")[0] as HTMLMetaElement).content,\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    settings: newSettings,\n                    ...(translationLanguage ? { language: translationLanguage } : {}),\n                }),\n            });\n\n            const responseJson = await response.json();\n            if (responseJson.success) {\n                window.styleguideSettings[blockId] = JSON.stringify(newSettings);\n                return resolve(true);\n            } else {\n                throw new Error(\"Could not update the block settings\");\n            }\n        });\n    },\n};\n\nconst context: AppBridgeContext = {\n    getEditorState: (): boolean => {\n        return document.body.classList.contains(\"editor-enabled\");\n    },\n    getProjectId: (): number => {\n        return window.application.config.context.project.id;\n    },\n};\n\nconst utilities: AppBridgeUtilities = {\n    closeApp: () => {\n        return;\n    },\n\n    openAssetChooser: (): void => {\n        const $assetChooser = window.application.sandbox.config.tpl.render(\"c-assetchooser\", {});\n        window.application.connectors.events.notify(null, TerrificEvent.OpenModal, {\n            modifier: \"flex\",\n            $content: $assetChooser,\n        });\n    },\n};\n\nexport default <AppBridgeNative>{\n    assets,\n    block,\n    context,\n    utilities,\n};\n","import appBridgeIframe from \"./AppBridgeIframe\";\nimport appBridgeNative from \"./AppBridgeNative\";\nimport packageJson from \"../package.json\";\nimport { AppBridgeNative, AppBridgeIframe } from \"./types\";\n\nexport const { version } = packageJson;\nexport * from \"./types\";\n\nexport const createNativeAppBridge = (): AppBridgeNative => {\n    return appBridgeNative;\n};\n\nexport const createIframeAppBridge = (): AppBridgeIframe => {\n    return appBridgeIframe;\n};\n"],"sourceRoot":""}