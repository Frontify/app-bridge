{"version":3,"sources":["webpack://@frontify/app-bridge/webpack/universalModuleDefinition","webpack://@frontify/app-bridge/webpack/bootstrap","webpack://@frontify/app-bridge/webpack/runtime/define property getters","webpack://@frontify/app-bridge/webpack/runtime/hasOwnProperty shorthand","webpack://@frontify/app-bridge/webpack/runtime/make namespace object","webpack://@frontify/app-bridge/webpack/startup","webpack://@frontify/app-bridge/./src/utilities/notify.ts","webpack://@frontify/app-bridge/./src/errors/NotifyError.ts","webpack://@frontify/app-bridge/./src/types/Topic.ts","webpack://@frontify/app-bridge/./src/errors/TimeoutReachedError.ts","webpack://@frontify/app-bridge/./src/utilities/subscribe.ts","webpack://@frontify/app-bridge/./src/AppBridgeIframe.ts","webpack://@frontify/app-bridge/./src/utilities/hash.ts","webpack://@frontify/app-bridge/./src/types/TerrificEvent.ts","webpack://@frontify/app-bridge/./src/AppBridgeNative.ts","webpack://@frontify/app-bridge/./src/index.ts"],"names":["root","factory","exports","module","define","amd","a","i","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","__webpack_exports__","notify","topic","token","data","options","window","top","postMessage","origin","FetchError","Error","Topic","TimeoutReachedError","subscribe","Promise","resolve","reject","addEventListener","subscribeResponseCallback","event","response","success","removeEventListener","setTimeout","timeout","PUBSUB_TOKEN","length","Math","random","toString","substr","generateRandomString","appState","getAppState","GetAppState","putAppState","newState","PutAppState","deleteAppState","DeleteAppState","assets","getAssetById","assetId","GetAssetById","postExternalAsset","asset","previewUrl","PostExternalAsset","auth","getThirdPartyOauth2Tokens","GetThirdPartyOauth2Tokens","getRefreshedThirdpartyOauth2Tokens","refreshToken","GetRefreshedThirdpartyOauth2Token","context","getProjectId","GetProjectId","utilities","closeApp","CloseApp","openAssetChooser","OpenAssetChooser","TerrificEvent","console","log","foo","block","getBlockId","element","parentDiv","closest","parentDivBlockId","parseInt","getAttribute","getBlockSettings","r","updateBlockSettings","newSettings","application","config","project","id","$assetChooser","sandbox","tpl","render","connectors","events","OpenModal","modifier","$content","version","createNativeAppBridge","createIframeAppBridge","__webpack_modules__"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[876](0, __webpack_exports__, __webpack_require__);\n","export type NotifyOptions = {\n    origin?: string;\n};\n\nexport type NotifyData = Record<string, unknown>;\n\nexport default function notify(topic: string, token: string, data?: NotifyData, options?: NotifyOptions): void {\n    const parentWindow = window.top;\n    parentWindow.postMessage(\n        {\n            topic,\n            token,\n            data,\n        },\n        options?.origin || \"*\",\n    );\n}\n","export default class FetchError extends Error {\n    constructor(topic: string) {\n        super(`Call with topic ${topic} failed.`);\n    }\n}\n","export enum Topic {\n    CloseApp = \"closeApp\",\n    DeleteAppState = \"deleteAppState\",\n    GetAppState = \"getAppState\",\n    GetAssetById = \"getAssetById\",\n    GetProjectId = \"getProjectId\",\n    GetRefreshedThirdpartyOauth2Token = \"getRefreshedThirdpartyOauth2Token\",\n    GetThirdPartyOauth2Tokens = \"getThirdPartyOauth2Tokens\",\n    OpenAssetChooser = \"openAssetChooser\",\n    PostExternalAsset = \"postExternalAsset\",\n    PutAppState = \"putAppState\",\n}\n","export default class TimeoutReachedError extends Error {\n    constructor(topic: string) {\n        super(`Timeout for call with topic \"${topic}\" expired. Call was aborted.`);\n    }\n}\n","import FetchError from \"../errors/NotifyError\";\nimport TimeoutReachedError from \"../errors/TimeoutReachedError\";\nimport { Topic } from \"../types\";\nimport type CrossDocumentMessageResponse from \"../types/CrossDocumentMessageResponse\";\n\nexport type SubscribeOptions = {\n    timeout?: number;\n};\n\nexport const SUBSCRIBE_TIMEOUT = 3 * 1000;\n\nexport default function subscribe<T>(topic: Topic, token: string, options?: SubscribeOptions): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n        const subscribeResponseCallback = (event: MessageEvent) => {\n            const response: CrossDocumentMessageResponse<T> = event.data;\n\n            if (response.token === token && response.topic === topic && response.success) {\n                resolve(<T>(response.data || true));\n            } else {\n                reject(new FetchError(topic));\n            }\n\n            window.removeEventListener(\"message\", subscribeResponseCallback);\n        };\n\n        window.addEventListener(\"message\", subscribeResponseCallback);\n\n        setTimeout(() => {\n            reject(new TimeoutReachedError(topic));\n        }, options?.timeout || SUBSCRIBE_TIMEOUT);\n    });\n}\n","import { generateRandomString } from \"./utilities/hash\";\nimport notify, { NotifyData } from \"./utilities/notify\";\nimport subscribe from \"./utilities/subscribe\";\nimport type {\n    AppBridge,\n    AppBridgeAppState,\n    AppBridgeAssets,\n    AppBridgeAuth,\n    AppBridgeContext,\n    AppBridgeUtilities,\n} from \"./types/AppBridge\";\nimport type { PostExternalAssetParams, OauthTokens, Asset } from \"./types\";\nimport { Topic } from \"./types\";\n\nexport interface AppBridgeIframe extends AppBridge {\n    appState: AppBridgeAppState;\n    assets: AppBridgeAssets;\n    auth: AppBridgeAuth;\n    context: AppBridgeContext;\n    utilities: AppBridgeUtilities;\n}\n\nconst PUBSUB_TOKEN = generateRandomString();\nconst DEFAULT_TIMEOUT = 3 * 1000;\nconst OAUTH2_TIMEOUT = 5 * 60 * 1000;\nconst FILE_UPLOAD_TIMEOUT = 10 * 1000;\n\nconst appState: AppBridgeAppState = {\n    getAppState<T = Record<string, unknown>>(): Promise<T> {\n        notify(Topic.GetAppState, PUBSUB_TOKEN);\n        return subscribe<T>(Topic.GetAppState, PUBSUB_TOKEN);\n    },\n\n    async putAppState(newState: NotifyData): Promise<boolean> {\n        notify(Topic.PutAppState, PUBSUB_TOKEN, newState);\n        return subscribe<boolean>(Topic.PutAppState, PUBSUB_TOKEN);\n    },\n\n    async deleteAppState(): Promise<boolean> {\n        notify(Topic.DeleteAppState, PUBSUB_TOKEN);\n        return subscribe<boolean>(Topic.DeleteAppState, PUBSUB_TOKEN);\n    },\n};\n\nconst assets: AppBridgeAssets = {\n    getAssetById(assetId: number): Promise<Asset> {\n        notify(Topic.GetAssetById, PUBSUB_TOKEN, { assetId });\n        return subscribe<Asset>(Topic.GetAssetById, PUBSUB_TOKEN);\n    },\n\n    async postExternalAsset(asset: PostExternalAssetParams): Promise<Asset> {\n        const timeout = asset.previewUrl ? FILE_UPLOAD_TIMEOUT : DEFAULT_TIMEOUT;\n        notify(Topic.PostExternalAsset, PUBSUB_TOKEN, { ...asset });\n        return subscribe<Asset>(Topic.PostExternalAsset, PUBSUB_TOKEN, {\n            timeout,\n        });\n    },\n};\n\nconst auth: AppBridgeAuth = {\n    getThirdPartyOauth2Tokens(): Promise<OauthTokens> {\n        notify(Topic.GetThirdPartyOauth2Tokens, PUBSUB_TOKEN);\n        return subscribe<OauthTokens>(Topic.GetThirdPartyOauth2Tokens, PUBSUB_TOKEN, {\n            timeout: OAUTH2_TIMEOUT,\n        });\n    },\n\n    getRefreshedThirdpartyOauth2Tokens(refreshToken: string): Promise<OauthTokens> {\n        notify(Topic.GetRefreshedThirdpartyOauth2Token, PUBSUB_TOKEN, { refreshToken });\n        return subscribe<OauthTokens>(Topic.GetRefreshedThirdpartyOauth2Token, PUBSUB_TOKEN);\n    },\n};\n\nconst context: AppBridgeContext = {\n    getProjectId: (): Promise<number> => {\n        notify(Topic.GetProjectId, PUBSUB_TOKEN);\n        return subscribe<number>(Topic.GetProjectId, PUBSUB_TOKEN);\n    },\n};\n\nconst utilities: AppBridgeUtilities = {\n    closeApp(): void {\n        notify(Topic.CloseApp, PUBSUB_TOKEN);\n    },\n\n    openAssetChooser: (): void => {\n        notify(Topic.OpenAssetChooser, PUBSUB_TOKEN);\n    },\n};\n\nexport default <AppBridgeIframe>{\n    appState,\n    assets,\n    auth,\n    context,\n    utilities,\n};\n","export const generateRandomString = (length = 6): string => {\n    return Math.random().toString(20).substr(2, length);\n};\n","export enum TerrificEvent {\n    OpenModal = \"onOpenModal\",\n}\n","import type { Asset, PostExternalAssetParams } from \"./types\";\nimport type {\n    AppBridge,\n    AppBridgeAssets,\n    AppBridgeBlock,\n    AppBridgeContext,\n    AppBridgeUtilities,\n} from \"./types/AppBridge\";\nimport { TerrificEvent } from \"./types/TerrificEvent\";\n\nexport interface AppBridgeNative extends AppBridge {\n    assets: AppBridgeAssets;\n    block: AppBridgeBlock;\n    context: AppBridgeContext;\n}\n\nconst assets: AppBridgeAssets = {\n    async postExternalAsset(asset: PostExternalAssetParams): Promise<Asset> {\n        console.log(asset);\n        return {} as Asset;\n    },\n\n    getAssetById(assetId: number): any {\n        return { foo: assetId };\n    },\n};\n\nconst block: AppBridgeBlock = {\n    getBlockId(element: HTMLElement): number {\n        const parentDiv = element.closest(\"div[data-block]\");\n        const parentDivBlockId = parseInt(parentDiv?.getAttribute(\"data-block\") || \"0\");\n\n        if (parentDiv || parentDivBlockId > 0) {\n            return parentDivBlockId;\n        }\n\n        throw new Error(\"Block's parent div not found.\");\n    },\n\n    getBlockSettings<T>(): Promise<T> {\n        return new Promise((r) => r({} as unknown as T));\n    },\n\n    updateBlockSettings(newSettings: Record<string, unknown>): Promise<boolean> {\n        console.log(newSettings);\n        return new Promise((r) => r(true));\n    },\n};\n\nconst context: AppBridgeContext = {\n    getProjectId: (): Promise<number> => {\n        return Promise.resolve(window.application.config.context.project.id);\n    },\n};\n\nconst utilities: AppBridgeUtilities = {\n    closeApp: () => {\n        return;\n    },\n\n    openAssetChooser: (): void => {\n        const $assetChooser = window.application.sandbox.config.tpl.render(\"c-assetchooser\", {});\n        window.application.connectors.events.notify(null, TerrificEvent.OpenModal, {\n            modifier: \"flex\",\n            $content: $assetChooser,\n        });\n    },\n};\n\nexport default <AppBridgeNative>{\n    assets,\n    block,\n    context,\n    utilities,\n};\n","import appBridgeIframe, { AppBridgeIframe } from \"./AppBridgeIframe\";\nimport appBridgeNative, { AppBridgeNative } from \"./AppBridgeNative\";\nimport packageJson from \"../package.json\";\n\nexport const { version } = packageJson;\nexport * from \"./types\";\n\nexport const createNativeAppBridge = (): AppBridgeNative => {\n    return appBridgeNative;\n};\n\nexport const createIframeAppBridge = (): AppBridgeIframe => {\n    return appBridgeIframe;\n};\n"],"sourceRoot":""}