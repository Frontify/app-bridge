{"version":3,"sources":["webpack://AppBridge/webpack/universalModuleDefinition","webpack://AppBridge/webpack/bootstrap","webpack://AppBridge/webpack/runtime/define property getters","webpack://AppBridge/webpack/runtime/hasOwnProperty shorthand","webpack://AppBridge/webpack/runtime/make namespace object","webpack://AppBridge/./src/errors/InvalidOriginError.ts","webpack://AppBridge/./src/errors/TimeoutReachedError.ts","webpack://AppBridge/./src/errors/FetchError.ts","webpack://AppBridge/./src/Actions.ts","webpack://AppBridge/./src/Messenger.ts","webpack://AppBridge/./src/AppBridge.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","InvalidOriginError","Error","TimeoutReachedError","FetchError","FetchKey","DispatchKey","Messenger","originUrl","tokenLength","this","Math","random","toString","substr","message","window","top","postMessage","token","timeout","Promise","resolve","reject","addEventListener","event","response","data","origin","success","once","setTimeout","AppBridge","messenger","dispatch","DispatchCloseApp","fetch","GetAppState","getMessageToken","GetThirdpartyOauth2Token","subscribeResponse","OAUTH2_TIMEOUT","state","PutAppState","asset","PostExternalAsset"],"mappings":"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","file":"AppBridge.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"AppBridge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AppBridge\"] = factory();\n\telse\n\t\troot[\"AppBridge\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class InvalidOriginError extends Error {\n    constructor() {\n        super(\"The origin of this call is not allowed\");\n    }\n}\n","import { FetchKey } from \"../Actions\";\n\nexport default class TimeoutReachedError extends Error {\n    constructor(key: FetchKey) {\n        super(`Timeout for call with key \"${key}\" expired. Call was aborted.`);\n    }\n}\n","import { FetchKey } from \"../Actions\";\n\nexport default class FetchError extends Error {\n    constructor(key: FetchKey) {\n        super(`Call with key ${key} failed.`);\n    }\n}\n","export enum FetchKey {\n    GetAppState = \"getAppState\",\n    GetThirdpartyOauth2Token = \"getThirdpartyOAuth2Token\",\n    PutAppState = \"putAppState\",\n    PostExternalAsset = \"postExternalAsset\",\n}\n\nexport enum DispatchKey {\n    DispatchCloseApp = \"closeApp\",\n}\n","import { DispatchKey, FetchKey } from \"./Actions\";\nimport InvalidOriginError from \"./errors/InvalidOriginError\";\nimport TimeoutReachedError from \"./errors/TimeoutReachedError\";\nimport FetchError from \"./errors/FetchError\";\n\nexport interface CrossDocumentMessage {\n    key: DispatchKey | FetchKey;\n    token: string;\n    data?: Record<string, unknown>;\n}\n\nexport interface CrossDocumentMessageResponse<T> {\n    success: boolean;\n    key: DispatchKey | FetchKey;\n    token: string;\n    data?: T;\n}\n\nexport interface AppBridgeResponse<T> {\n    success: boolean;\n    error?: string;\n    data?: T;\n}\n\nexport default class Messenger {\n    private readonly originUrl: string;\n    private readonly tokenLength: number = 6;\n\n    constructor(originUrl: string) {\n        this.originUrl = originUrl;\n    }\n\n    public getMessageToken(): string {\n        return Math.random().toString(20).substr(2, this.tokenLength);\n    }\n\n    public postMessage(message: CrossDocumentMessage): void {\n        const parentWindow = window.top;\n        parentWindow.postMessage(message, this.originUrl);\n    }\n\n    public subscribeResponse<T>(key: FetchKey, token: string, timeout = 3000): Promise<AppBridgeResponse<T>> {\n        return new Promise((resolve, reject) => {\n            window.addEventListener(\n                \"message\",\n                (event) => {\n                    const response: CrossDocumentMessageResponse<T> = event.data;\n\n                    if (response.token !== token || response.key !== key) {\n                        return;\n                    }\n\n                    if (event.origin !== this.originUrl) {\n                        reject(new InvalidOriginError());\n                    }\n\n                    response.success\n                        ? resolve({\n                              success: response.success,\n                              data: response.data,\n                          })\n                        : reject(new FetchError(key));\n                },\n                { once: true },\n            );\n\n            setTimeout(() => {\n                reject(new TimeoutReachedError(key));\n            }, timeout);\n        });\n    }\n}\n","import Messenger, { AppBridgeResponse } from \"./Messenger\";\nimport { DispatchKey, FetchKey } from \"./Actions\";\nimport { AppState, Asset } from \"./ResponseType\";\n\nexport { DispatchKey, FetchKey } from \"./Actions\";\n\nexport default class AppBridge {\n    private messenger: Messenger;\n    private static OAUTH2_TIMEOUT = 5 * 60 * 1000;\n\n    constructor(originUrl: string) {\n        this.messenger = new Messenger(originUrl);\n    }\n\n    public closeApp(): void {\n        this.dispatch(DispatchKey.DispatchCloseApp);\n    }\n\n    public async getAppState(): Promise<AppBridgeResponse<AppState>> {\n        return this.fetch<AppState>(FetchKey.GetAppState);\n    }\n\n    public async getThirdpartyOAuth2Token(): Promise<AppBridgeResponse<AppState>> {\n        const token = this.messenger.getMessageToken();\n        this.messenger.postMessage({ key: FetchKey.GetThirdpartyOauth2Token, token });\n\n        return this.messenger.subscribeResponse<AppState>(\n            FetchKey.GetThirdpartyOauth2Token,\n            token,\n            AppBridge.OAUTH2_TIMEOUT,\n        );\n    }\n\n    public async putAppState(state: Record<string, unknown>): Promise<AppBridgeResponse<AppState>> {\n        return this.fetch<AppState>(FetchKey.PutAppState, state);\n    }\n\n    public async postExternalAsset(asset: { url: string; title: string }): Promise<AppBridgeResponse<Asset>> {\n        return this.fetch<Asset>(FetchKey.PostExternalAsset, asset);\n    }\n\n    private dispatch(key: DispatchKey): void {\n        const token = this.messenger.getMessageToken();\n        this.messenger.postMessage({ key, token });\n    }\n\n    private async fetch<T>(key: FetchKey, data?: Record<string, unknown>): Promise<AppBridgeResponse<T>> {\n        const token = this.messenger.getMessageToken();\n        this.messenger.postMessage({ key, token, data });\n\n        return this.messenger.subscribeResponse<T>(key, token);\n    }\n}\n"],"sourceRoot":""}